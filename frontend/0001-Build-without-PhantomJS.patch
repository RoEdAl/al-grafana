From c01adb374e55c1578a175b1fff2fe6179689ea59 Mon Sep 17 00:00:00 2001
From: Edmunt Pienkowsky <roed@onet.eu>
Date: Sun, 22 Dec 2019 13:02:28 +0100
Subject: [PATCH 1/2] Build without PhantomJS


diff --git a/package.json b/package.json
index 26eabe411..daf940869 100644
--- a/package.json
+++ b/package.json
@@ -111,7 +111,6 @@
     "node-sass": "4.12.0",
     "npm": "6.9.0",
     "optimize-css-assets-webpack-plugin": "5.0.1",
-    "phantomjs-prebuilt": "2.1.16",
     "pixelmatch": "4.0.2",
     "pngjs": "3.4.0",
     "postcss-browser-reporter": "0.5.0",
diff --git a/scripts/grunt/build_task.js b/scripts/grunt/build_task.js
index ca64c8d6f..41f9b679e 100644
--- a/scripts/grunt/build_task.js
+++ b/scripts/grunt/build_task.js
@@ -6,7 +6,6 @@ module.exports = function(grunt) {
   grunt.registerTask('build', [
     'clean:release',
     'clean:build',
-    'phantomjs',
     'exec:webpack',
   ]);
 
diff --git a/scripts/grunt/default_task.js b/scripts/grunt/default_task.js
index 7201bea84..51b0287b7 100644
--- a/scripts/grunt/default_task.js
+++ b/scripts/grunt/default_task.js
@@ -4,8 +4,7 @@ module.exports = function(grunt) {
 
   // prettier-ignore
   grunt.registerTask('default', [
-    'clean:build',
-    'phantomjs',
+    'clean:build'
   ]);
 
   // prettier-ignore
diff --git a/scripts/grunt/options/phantomjs.js b/scripts/grunt/options/phantomjs.js
deleted file mode 100644
index 8c4e8dbd2..000000000
--- a/scripts/grunt/options/phantomjs.js
+++ /dev/null
@@ -1,37 +0,0 @@
-module.exports = function(config,grunt) {
-  'use strict';
-
-  grunt.registerTask('phantomjs', 'Copy phantomjs binary to vendor/', function() {
-
-    var dest = './tools/phantomjs/phantomjs';
-    var confDir = './node_modules/phantomjs-prebuilt/lib/';
-
-    if (process.platform === "win32") {
-      dest += ".exe";
-    }
-
-    src = config.phjs
-
-    if (!src){
-      var m=grunt.file.read(confDir+"location.js")
-      var src=/= \"([^\"]*)\"/.exec(m)[1];
-
-      if (!grunt.file.isPathAbsolute(src)) {
-        src = confDir+src;
-      }
-    }
-
-    try {
-      grunt.config('copy.phantom_bin', {
-        src: src,
-        dest: dest,
-        options: { mode: true},
-      });
-      grunt.task.run('copy:phantom_bin');
-    } catch (err) {
-      grunt.verbose.writeln(err);
-      grunt.fail.warn('No working Phantomjs binary available')
-    }
-
-  });
-};
diff --git a/tools/phantomjs/render.js b/tools/phantomjs/render.js
deleted file mode 100644
index d0fb02344..000000000
--- a/tools/phantomjs/render.js
+++ /dev/null
@@ -1,82 +0,0 @@
-(function() {
-    'use strict';
-
-    var page = require('webpage').create();
-    var args = require('system').args;
-    var params = {};
-    var regexp = /^([^=]+)=([^$]+)/;
-
-    args.forEach(function(arg) {
-      var parts = arg.match(regexp);
-      if (!parts) { return; }
-      params[parts[1]] = parts[2];
-    });
-
-    var usage = "url=<url> png=<filename> width=<width> height=<height> renderKey=<key>";
-
-    if (!params.url || !params.png ||  !params.renderKey || !params.domain) {
-      console.log(usage);
-      phantom.exit();
-    }
-
-    phantom.addCookie({
-      'name': 'renderKey',
-      'value': params.renderKey,
-      'domain': params.domain,
-    });
-
-    page.viewportSize = {
-      width: params.width || '800',
-      height: params.height || '400'
-    };
-
-    var timeoutMs = (parseInt(params.timeout) || 10) * 1000;
-    var waitBetweenReadyCheckMs = 50;
-    var totalWaitMs = 0;
-
-    page.open(params.url, function (status) {
-      console.log('Loading a web page: ' + params.url + ' status: ' + status, timeoutMs);
-
-      page.onError = function(msg, trace) {
-        var msgStack = ['ERROR: ' + msg];
-        if (trace && trace.length) {
-          msgStack.push('TRACE:');
-          trace.forEach(function(t) {
-            msgStack.push(' -> ' + t.file + ': ' + t.line + (t.function ? ' (in function "' + t.function +'")' : ''));
-          });
-        }
-        console.error(msgStack.join('\n'));
-      };
-
-      function checkIsReady() {
-        var panelsRendered = page.evaluate(function() {
-          var panelCount = document.querySelectorAll('plugin-component').length;
-          return window.panelsRendered >= panelCount;
-        });
-
-        if (panelsRendered || totalWaitMs > timeoutMs) {
-          var bb = page.evaluate(function () {
-            var container = document.getElementsByClassName("dashboard-container")
-            if (container.length == 0) {
-               container = document.getElementsByClassName("panel-container")
-            }
-            return container[0].getBoundingClientRect();
-          });
-          
-          // reset viewport to render full page
-          page.viewportSize = {
-            width: bb.width,
-            height: bb.height
-          };
-
-          page.render(params.png);
-          phantom.exit();
-        } else {
-          totalWaitMs += waitBetweenReadyCheckMs;
-          setTimeout(checkIsReady, waitBetweenReadyCheckMs);
-        }
-      }
-
-      setTimeout(checkIsReady, waitBetweenReadyCheckMs);
-    });
-  })();
-- 
2.24.1

