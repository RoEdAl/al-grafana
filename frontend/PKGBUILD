# Maintainer: Edmunt Pienkowsky <roed@onet.eu>

# Based on: http://www.archlinux.org/packages/community/x86_64/grafana/
# Excluded PhantomJS library due to lack of prebuilt binaries for ARM architectures.
# You may try http://github.com/grafana/grafana-image-renderer plugin instead.

pkgname=grafana-frontend
_pkgname=grafana
pkgver=7.3.1
pkgrel=1
pkgdesc='Gorgeous metric viz, dashboards & editors for Graphite, InfluxDB & OpenTSDB - Frontend'
url='https://grafana.com/'
arch=('any')
license=('Apache')
depends=()
makedepends=('yarn' 'python' 'nodejs-lts-erbium')
options=(!strip)
source=("$_pkgname-$pkgver.tar.gz::https://github.com/grafana/grafana/archive/v$pkgver.tar.gz"
	'0002-Frontend-build-without-source-map.patch'
)
sha256sums=('f775a6fe400a45b3a4c6a2bee4f4c2788cb51ee165255a0d26bd0e5167049ca8'
            'a0abba65349b22ca55769d30f293a89248dc8596c9a3fd415ac8fbd4174dd4c5')

prepare() {
  cd "$_pkgname-$pkgver"
  for f in "${source[@]}"; do
    if [[ "$f" =~ \.patch$ ]]; then
      msg2 "Applying patch ${f##*/}"
      git apply "$srcdir/${f##*/}"
    fi
  done
}

build() {
  msg2 'Cache setup'
  local yarn_cache_folder="$srcdir/tmp/yarn"
  local npm_config_devdir="$srcdir/tmp/gyp"
  local npm_config_prefix="$srcdir/tmp/npm"
  local NODETMP="$srcdir/tmp/node"
  mkdir -p "$yarn_cache_folder"
  mkdir -p "$npm_config_devdir"
  mkdir -p "$npm_config_prefix"
  mkdir -p "$NODETMP"

  msg2 'Building the frontend'
  cd $_pkgname-$pkgver
  env \
    npm_config_devdir="$npm_config_devdir" \
    npm_config_prefix="$npm_config_prefix" \
    YARN_CACHE_FOLDER="$yarn_cache_folder" \
    TMPDIR="$NODETMP" \
    yarn install --pure-lockfile --no-progress --network-concurrency=1 --network-timeout=60000
  env \
    npm_config_devdir="$npm_config_devdir" \
    npm_config_prefix="$npm_config_prefix" \
    TMPDIR="$NODETMP" \
    yarn run build release
}

package() {
  install -dm755 "$pkgdir/usr/share/$pkgname/"
  cd $_pkgname-$pkgver
  for i in public tools; do
    [[ -d "$i" ]] || continue
    cp -r "$i" "$pkgdir/usr/share/$pkgname/$i"
  done
}
