# Maintainer: Edmunt Pienkowsky <roed@onet.eu>

# Based on: http://www.archlinux.org/packages/community/x86_64/grafana/

pkgname=grafana
pkgver=7.5.1
pkgrel=1
# _commit_short=$(git rev-parse --short HEAD)
_commit_short=4dffb875cf
pkgdesc='Gorgeous metric viz, dashboards & editors for Graphite, InfluxDB & OpenTSDB'
url='https://grafana.com/'
arch=('i686' 'x86_64' 'aarch64' 'armv7h' 'armv6h')
license=('Apache')
depends=('glibc')
makedepends=('go>=1.13.4' "${pkgname}-frontend=${pkgver}")
backup=('etc/grafana.ini')
source=("$pkgname-$pkgver.tar.gz::https://github.com/grafana/grafana/archive/v$pkgver.tar.gz"
	'0001-build-allow-to-specify-commit-hash.patch'
	'0003-build.go-setup-improvements.patch'
	'grafana.service'
	'grafana.sysusers'
	'grafana.tmpfiles'
	'nginx-grafana.conf')
noextract=("$pkgname-$pkgver.tar.gz")
sha256sums=('fa8f88738cfaf731e4799716fdf6dea32b525ce8225e28eae7d9f13c07f39dfb'
            'ef1bd6766c9aefb9550bab728de99ac0b96366c6512e5404a747998715a3ba3c'
            'fce01372eefd504e91cc1f049c476d9a08869a78c56c6d0ddcfc84e543cb854a'
            'debe84c19f1ed5a78d4fa2a664e66f04e08212803505fd9ff67b72260c98fed9'
            'bcb2d35f41dcb6a9c8240bc8fe89e78ed270a6b5307d9b46f2bf59b0c7554a2b'
            'ac3f4c95c2bedafa5d845b0ef086bbf4c943f5b8a828d92698da24f0e2a4db38'
            'e500f50fcb86859d94c9fd63084487141b7c90302a356e7e466bffcce7336014')

prepare() {
  msg2 'Cache setup'
  local GOCACHE="$srcdir/cache/go"
  local GOTMP="$srcdir/tmp/go"
  mkdir -p "$GOCACHE"
  mkdir -p "$GOTMP"

  msg2 'GOPATH setup'
  local GOPATH="$srcdir/gopath"
  mkdir -p "$GOPATH/src/github.com/grafana"
  bsdtar -xf "$srcdir/$pkgname-$pkgver.tar.gz" -C "$GOPATH/src/github.com/$pkgname"
  mv "$GOPATH/src/github.com/$pkgname/$pkgname-$pkgver" "$GOPATH/src/github.com/$pkgname/$pkgname"

  msg2 'Applying patches'
  cd "$GOPATH/src/github.com/$pkgname/$pkgname"
  # apply patch from the source array (should be a pacman feature)
  local filename
  for filename in "${source[@]}"; do
    if [[ "$filename" =~ \.patch$ ]]; then
      msg2 "Applying patch ${filename##*/}"
      git apply "$srcdir/${filename##*/}"
    fi
  done

  msg2 'Configuration file tweaks'
  # set arch linux paths
  sed -ri 's,^(\s*data\s*=).*,\1 /var/lib/grafana,' conf/defaults.ini
  sed -ri 's,^(\s*plugins\s*=).*,\1 /var/lib/grafana/plugins,' conf/defaults.ini
  sed -ri 's,^(\s*provisioning\s*=).*,\1 /var/lib/grafana/conf/provisioning,' conf/defaults.ini
  sed -ri 's,^(\s*mode\s*=).*,\1 syslog,' conf/defaults.ini
  sed -ri 's,^(\s*tag\s*=).*,\1 grafana,' conf/defaults.ini
  sed -ri 's,^(\s*logs\s*=).*,\1 /var/log/grafana,' conf/defaults.ini
}

build() {
  local GOCACHE="$srcdir/tmp/cache"
  local GOTMP="$srcdir/tmp/go"
  local GOPATH="$srcdir/gopath"

  local -r ENV_ARGS=(
    "PATH=$PATH:$GOPATH/bin"
    TMPDIR="$GOTMP"
    "GOCACHE=$GOCACHE"
    "GOPATH=$GOPATH"
    "GOTMPDIR=$GOTMP"
    GOROOT_FINAL=/usr/lib/go
    "GRAFANA_COMMIT=$_commit_short"
    "CGO_CPPFLAGS=${CPPFLAGS}"
    "CGO_CFLAGS=${CFLAGS}"
    "CGO_CXXFLAGS=${CXXFLAGS}"
    "GOFLAGS=-buildmode=pie -modcacherw -trimpath"
  )

  msg2 'Building the backend'
  cd "$GOPATH/src/github.com/$pkgname/$pkgname"
  env "${ENV_ARGS[@]}" go run build.go setup
  env "${ENV_ARGS[@]}" go run build.go build
}

package() {
  local GOPATH="$srcdir/gopath"

  install -Dm644 grafana.tmpfiles "$pkgdir/usr/lib/tmpfiles.d/grafana.conf"
  install -Dm644 grafana.sysusers "$pkgdir/usr/lib/sysusers.d/grafana.conf"
  install -Dm644 grafana.service "$pkgdir/usr/lib/systemd/system/grafana.service"

  cd $GOPATH/src/github.com/$pkgname/$pkgname

  case $CARCH in
    x86_64) PFM=amd64;;
    i686) PFM=386;;
    aarch64) PFM=arm64;;
    armv7h) PFM=arm;;
    armv6h) PFM=arm;;
  esac
  install -Dsm755 bin/linux-${PFM}/grafana-server "$pkgdir/usr/bin/grafana-server"
  install -Dsm755 bin/linux-${PFM}/grafana-cli "$pkgdir/usr/bin/grafana-cli"

  install -Dm640 conf/sample.ini "$pkgdir/etc/$pkgname.ini"
  install -Dm644 conf/defaults.ini "$pkgdir/usr/share/$pkgname/conf/defaults.ini"
  install -dm755 "$pkgdir/usr/share/$pkgname/"
  install -Dm644 "$srcdir/nginx-grafana.conf" "$pkgdir/usr/share/$pkgname/conf/nginx-grafana.conf"

  # frontend
  for i in public tools; do
    [[ -d "/usr/share/${pkgname}-frontend/${i}" ]] || continue
    cp -r "/usr/share/${pkgname}-frontend/${i}" "$pkgdir/usr/share/$pkgname/${i}"
  done
}
